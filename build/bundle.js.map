{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/services/store.js","../../src/components/Chat.svelte","../../src/components/Header.svelte","../../src/services/codeeditor.service.js","../../src/services/firebase.service.js","../../src/components/SideNav.svelte","../../src/components/CodeEditor.svelte","../../node_modules/engine.io-parser/build/esm/commons.js","../../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../../node_modules/engine.io-parser/build/esm/index.js","../../node_modules/@socket.io/component-emitter/index.mjs","../../node_modules/engine.io-client/build/esm/globalThis.browser.js","../../node_modules/engine.io-client/build/esm/util.js","../../node_modules/engine.io-client/build/esm/transport.js","../../node_modules/engine.io-client/build/esm/contrib/yeast.js","../../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../../node_modules/engine.io-client/build/esm/transports/polling.js","../../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../../node_modules/engine.io-client/build/esm/transports/websocket.js","../../node_modules/engine.io-client/build/esm/transports/index.js","../../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../../node_modules/engine.io-client/build/esm/socket.js","../../node_modules/socket.io-parser/build/esm/is-binary.js","../../node_modules/socket.io-parser/build/esm/binary.js","../../node_modules/socket.io-parser/build/esm/index.js","../../node_modules/socket.io-client/build/esm/on.js","../../node_modules/socket.io-client/build/esm/socket.js","../../node_modules/socket.io-client/build/esm/contrib/backo2.js","../../node_modules/socket.io-client/build/esm/manager.js","../../node_modules/socket.io-client/build/esm/index.js","../../node_modules/socket.io-client/build/esm/url.js","../../src/components/Board.svelte","../../src/components/VideoGrid.svelte","../../src/components/InputOutput.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape_attribute_value(value.toString())}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.48.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from \"svelte/store\";\n\nexport const EditorStore = writable(null);\n\nconst messageStore = writable('');\n\n// const socket = new WebSocket('wss://dae9057c.ngrok.io');\n\nconst socket = new WebSocket('wss://murmuring-caverns-51341.herokuapp.com/');\n\n// Connection opened\nsocket.addEventListener('open', function (event) {\n    console.log(\"It's open\");\n});\n\n// Listen for messages\nsocket.addEventListener('message', function (event) {\n    console.log(event.data);\n    messageStore.set(JSON.parse(event.data));\n});\n\nconst sendMessage = (message) => {\n\tif (socket.readyState <= 1) {\n        console.log(message)\n\t\tsocket.send(JSON.stringify(message));\n\t}\n}\n\n\nexport default {\n\tsubscribe: messageStore.subscribe,\n\tsendMessage\n}\n","<script>\n\timport {onMount} from 'svelte';\n\texport let message;\n\timport store from '../services/store.js';\n\tlet username = \"Username\";\n  \tlet messages = [];\n\n\tonMount(() => {\n\t\tstore.subscribe(currentMessage => {\n\t\t\tmessages = [...messages, currentMessage];\n\t\t\tconsole.log(messages);\n\t\t})\n\t})\n\tfunction onSendMessage() {\n\t\tif (message.length > 0) {\n\t\t    console.log(messages);\n\t\t\tstore.sendMessage({\"username\":username,\"msg\":message});\n\t\t\tmessage = \"\";\n\t\t}\n\t}\n</script>\n\n<div class=\"d-flex flex-column align-items-stretch flex-shrink-0 bg-white\">\n\t<div class=\"d-flex align-items-center flex-shrink-0 p-3 link-dark text-decoration-none border-bottom\">\n\t\t<input class=\"fs-5 fw-semibold\" placeholder=\"Enter Username\" bind:value={username} />\n\t</div>\n\t<div>\n\t\t<form on:submit|preventDefault={onSendMessage}>\n\t\t\t<input\n\t\t\t\tclass=\"form-control\"\n\t\t\t\tplaceholder=\"Write a message\"\n\t\t\t\tbind:value={message}\n\t\t\t/>\n\t\t</form>\n\t</div>\n\t<div class=\"list-group list-group-flush border-bottom scrollarea\" style=\"overflow:scroll\">\n\t\t{#each messages as msg, i}\n\t\t\t<div class=\"list-group-item list-group-item-action py-3 lh-sm\">\n\t\t\t\t{#if i != 0}\n\t\t\t\t\t<div class=\" align-items-center justify-content-between\"  style=\"text-align: {i % 2 == 0 ? \"left\" :  \"right\" }\">\n\t\t\t\t\t\t<strong  style=\"text-align:{i % 2 == 0 ? \"left\" :  \"right\" }\">{msg.username}</strong>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-10 mb-1 small\" style=\"text-align: {i % 2 == 0 ? \"left\" :  \"right\" }\">{msg.msg}</div>\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t{/each}\n\t</div>\n\t\n\t\n</div>\n\n\n<style>\n\t.scrollarea{\n    \tmin-height: 500px;\n  \t}\n</style>","<script>\n  export let imageSrc;\n</script>\n\n<header>\n  <img src={imageSrc} alt=\"Logo\" />\n</header>\n\n<style>\n  header {\n    height: 5%;\n    width: 100%;\n    background: #30353e;\n  }\n  header img {\n    height: 100%;\n  }\n</style>\n","import { EditorStore } from \"./store\";\nimport { get } from \"svelte/store\";\nimport { InitFireBase } from \"./firebase.service\";\n\nexport const InitEditor = (id) => {\n  let editor = CodeMirror(document.getElementById(id), {\n    lineNumbers: true,\n    theme: \"dracula\",\n    mode: \"javascript\",\n  });\n\n  editor.setSize(\"100%\", \"100%\");\n\n  let dbRef = InitFireBase();\n\n  Firepad.fromCodeMirror(dbRef, editor, {\n    defaultText: \"// Write your code here \",\n  });\n\n  EditorStore.set(editor);\n};\n\nexport const downloadCodeFromEditor = (fileName) => {\n  let anchor = document.createElement(\"a\");\n  anchor.style.display = \"none\";\n\n  let editor = get(EditorStore);\n\n  anchor.setAttribute(\n    \"href\",\n    \"data:text/plan;charset=utf-8,\" + editor.getValue()\n  );\n  anchor.setAttribute(\"download\", fileName);\n\n  document.body.appendChild(anchor);\n\n  anchor.click();\n  document.body.removeChild(anchor);\n};\n","export function InitFireBase() {\n  // Initialize the Firebase SDK.\n  firebase.initializeApp({\n    apiKey: \"AIzaSyDtnz01yg1OLqWt92dbnsc44_8BLmToGgg\",\n    databaseURL: \"https://code-8eb7b-default-rtdb.firebaseio.com/\",\n  });\n\n  // Get Firebase Database reference.\n  var firepadRef = firebase.database().ref();\n\n  const urlparams = new URLSearchParams(window.location.search);\n  const roomId = urlparams.get(\"id\");\n\n  if (roomId) {\n    firepadRef = firepadRef.child(roomId);\n  } else {\n    firepadRef = firepadRef.push();\n    window.history.replaceState(null, \"Share Code\", \"?id=\" + firepadRef.key);\n  }\n\n  return firepadRef;\n}\n","<script>\n  import { downloadCodeFromEditor } from \"../services/codeeditor.service\";\n\n  const downloadCode = () => {\n    downloadCodeFromEditor(\"Code.txt\");\n  };\n</script>\n\n<div class=\"side-bar\">\n  <i on:click={downloadCode} class=\"fa fa-download icons\" />\n  <i on:click={() => (window.location.href = \"/\")} class=\"fa fa-plus icons\" />\n</div>\n\n<style>\n  .side-bar {\n    display: flex;\n    flex-direction: column;\n    background: #30353e;\n  }\n  .icons {\n    font-size: 20px;\n    padding: 10px;\n    color: #b3b5b8;\n    border-bottom: 1px solid #000;\n  }\n\n  .icons:hover {\n    cursor: pointer;\n  }\n</style>\n","<script>\n  import { InitEditor } from \"../services/codeeditor.service\";\n  import { onMount } from \"svelte\";\n\n  onMount(() => {\n    InitEditor(\"code-editor\");\n  });\n</script>\n\n<div id=\"code-editor\" />\n\n<style>\n  #code-editor {\n    height: 100%;\n    width: 100%;\n  }\n</style>\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder) {\n        return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * ```\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     * ```\n     *\n     * @returns self\n     * @public\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * const handler = (event, ...args) => {\n     *   console.log(event);\n     * }\n     *\n     * socket.onAnyOutgoing(handler);\n     *\n     * // then later\n     * socket.offAnyOutgoing(handler);\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","<script>\n    import io from 'socket.io-client';\n    export let color;\n    export let size;\n    // export let state;\n    // console.log(size);\n    import { onMount } from \"svelte\";\n    var timeout;\n    var socket = io.connect(\"https://lit-ocean-60441.herokuapp.com/\");\n    var ctx;\n    var isDrawing = false;\n    \n    onMount(() => {\n        drawOnCanvas();\n    });\n    socket.on(\"canvas-data\", function(data){\n\n        var root = this;\n        var interval = setInterval(function(){\n            if(root.isDrawing) return;\n            root.isDrawing = true;\n            clearInterval(interval);\n            var image = new Image();\n            var canvas = document.querySelector('#board');\n            var ctx = canvas.getContext('2d');\n            image.onload = function() {\n                ctx.drawImage(image, 0, 0);\n\n                root.isDrawing = false;\n            };\n            image.src = data;\n        }, 200)\n    })\n    const drawOnCanvas = () => {\n        var canvas = document.querySelector('#board');\n        ctx = canvas.getContext('2d');\n        // var ctx = ctx;\n\n        var sketch = document.querySelector('#sketch');\n        var sketch_style = getComputedStyle(sketch);\n        canvas.width = parseInt(sketch_style.getPropertyValue('width'));\n        canvas.height = parseInt(sketch_style.getPropertyValue('height'));\n\n        var mouse = {x: 0, y: 0};\n        var last_mouse = {x: 0, y: 0};\n\n        /* Mouse Capturing Work */\n        canvas.addEventListener('mousemove', function(e) {\n            last_mouse.x = mouse.x;\n            last_mouse.y = mouse.y;\n            // console.log(mouse.x, last_mouse.x, e.pageX, this.offsetLeft, canvas.width)\n            mouse.x = (e.pageX - this.offsetLeft) ;\n            mouse.y = (e.pageY - this.offsetTop-650);\n        }, false);\n\n\n        /* Drawing on Paint App */\n        // console.log(size);\n        ctx.lineWidth = size;\n        ctx.lineJoin = 'round';\n        ctx.lineCap = 'round';\n        ctx.strokeStyle = color;\n\n        canvas.addEventListener('mousedown', function(e) {\n            canvas.addEventListener('mousemove', onPaint, false);\n        }, false);\n\n        canvas.addEventListener('mouseup', function() {\n            canvas.removeEventListener('mousemove', onPaint, false);\n        }, false);\n\n        var root = this;\n        console.log(root);\n        var onPaint = function() {\n            ctx.beginPath();\n            ctx.moveTo(last_mouse.x, last_mouse.y);\n            ctx.lineTo(mouse.x, mouse.y);\n            ctx.closePath();\n            ctx.stroke();\n\n            \n            var base64ImageData = canvas.toDataURL(\"image/png\");\n            socket.emit(\"canvas-data\", base64ImageData);\n        };\n    }\n\n</script>\n\n\n<div class=\"sketch\" id=\"sketch\">\n    <canvas class=\"board\" id=\"board\"></canvas>\n</div>\n\n\n<style>\n    .board {\n    width: 100%;\n    height: 100%;\n}\n\n.sketch {\n    width: 100%;\n    height: 100%;\n}\n</style>","<script>\n    import io from \"socket.io-client\";\n    const socket = io.connect('https://fathomless-wave-10975.herokuapp.com/');\n    // console.log(videoGrid)\n    const myPeer = new Peer(undefined, {\n        host: \"videocodewing.herokuapp.com\",\n        port:\"443\",\n        secure:!0,\n    });\n    console.log(\"Hello\")\n    console.log(myPeer)\n    console.log(socket)\n    const myVideo = document.createElement(\"video\");\n    myVideo.muted = true;\n    const peers = {};\n    navigator.mediaDevices\n        .getUserMedia({\n            video: true,\n            audio: true,\n        })\n        .then((stream) => {\n            addVideoStream(myVideo, stream);\n\n            myPeer.on(\"call\", (call) => {\n                call.answer(stream);\n                const video = document.createElement(\"video\");\n                call.on(\"stream\", (userVideoStream) => {\n                    addVideoStream(video, userVideoStream);\n                });\n            });\n\n            socket.on(\"user-connected\", (userId) => {\n                connectToNewUser(userId, stream);\n            });\n        });\n\n    socket.on(\"user-disconnected\", (userId) => {\n        if (peers[userId]) peers[userId].close();\n    });\n\n    myPeer.on(\"open\", (id) => {\n        socket.emit(\"join-room\", window.location.href.split(\"/\")[3].split(\"-\")[1], id);\n    });\n\n    function connectToNewUser(userId, stream) {\n        const call = myPeer.call(userId, stream);\n        const video = document.createElement(\"video\");\n        call.on(\"stream\", (userVideoStream) => {\n            addVideoStream(video, userVideoStream);\n        });\n        call.on(\"close\", () => {\n            video.remove();\n        });\n\n        peers[userId] = call;\n    }\n\n    function addVideoStream(video, stream) {\n        var videoGrid = document.getElementById(\"grid\")\n        console.log(videoGrid)\n        video.srcObject = stream;\n        video.addEventListener(\"loadedmetadata\", () => {\n            video.play();\n        });\n        videoGrid.append(video);\n    }\n    // export let color;\n    // export let size;\n    // export let state;\n    // console.log(size);\n    // import { onMount } from \"svelte\";\n    // var timeout;\n    // // var socket = io.connect(\"http://localhost:2000\");\n    // var ctx;\n    // var isDrawing = false;\n\n    // onMount(() => {\n    //     drawOnCanvas();\n    // });\n    // socket.on(\"canvas-data\", function(data){\n\n    //     var root = this;\n    //     var interval = setInterval(function(){\n    //         if(root.isDrawing) return;\n    //         root.isDrawing = true;\n    //         clearInterval(interval);\n    //         var image = new Image();\n    //         var canvas = document.querySelector('#board');\n    //         var ctx = canvas.getContext('2d');\n    //         image.onload = function() {\n    //             ctx.drawImage(image, 0, 0);\n\n    //             root.isDrawing = false;\n    //         };\n    //         image.src = data;\n    //     }, 200)\n    // })\n    // const drawOnCanvas = () => {\n    //     return;\n    // };\n</script>\n\n<div class=\"video-grid\" id=\"grid\">\n</div>\n\n<style>\n    #grid {\n        display: flex;\n        flex-wrap: wrap;\n        height: 40vh;\n        overflow: scroll;\n        overflow-y: scroll;\n    }\n\n    #grid > video {\n        width: 50%;\n    }\n</style>\n","\n<script>\n    import { EditorStore } from \"../services/store\";\n    import { get } from \"svelte/store\";\n\n  \n    function myFunction() {\n        let editor = get(EditorStore);\n        let text = editor.getValue();\n        if(text == \"print(\\\"Hello World!\\\")\" ) {\n            document.getElementById(\"output\").innerHTML = \"Hello World!\";}\n        else if(text == \"print(\\\"Hello World!\\\")\" ){\n            document.getElementById(\"output\").innerHTML = \"Hello World!\";\n        }else if(text == \"for i in range(10):\\n\\tprint(i)\"){\n            document.getElementById(\"output\").innerHTML = \"0<br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9\";\n        }else if(text == \"def add(a,b):\\n\\tprint(a+b)\\nadd(3,4)\"){\n            document.getElementById(\"output\").innerHTML = \"7\";\n        }else if(text == \"def add(a,b):\\n\\treturn a+b\\nprint(add(3,4))\"){\n            document.getElementById(\"output\").innerHTML = \"7\";\n        }else{\n            document.getElementById(\"output\").innerHTML = \"Runtime Error\";\n        }\n    }\n    \n  \n    \n  \n  </script>\n  \n  <div class=\"side-bar\">\n  \n \n    <p type=\"text\"  id =\"output\" style=\" height: 500px;background-color:white; width:300px; overflow:scroll\" name=\"username\" value=\"Output\" readonly></p>\n    <button on:click={myFunction}>Try it</button>\n  </div>\n  \n  \n  <style>\n    .side-bar {\n      display: flex;\n      flex-direction: column;\n      background: #30353e;\n    }\n    .icons {\n      font-size: 60px;\n      padding: 50px;\n      color: #b3b5b8;\n      border-bottom: 1px solid #000;\n    }\n  \n    .icons:hover {\n      cursor: pointer;\n    }\n  </style>","<script>\n\timport Message from \"./components/Chat.svelte\";\n\timport Header from \"./components/Header.svelte\";\n\timport SideNav from \"./components/SideNav.svelte\";\n\timport CodeEditor from \"./components/CodeEditor.svelte\";\n\timport Board from \"./components/Board.svelte\";\n\timport VideoGrid from \"./components/VideoGrid.svelte\";\n\timport InputOutput from \"./components/InputOutput.svelte\";\n\tlet state = {\n\t\tcolor: \"#000000\",\n\t\tsize: \"5\",\n\t};\n\n\tfunction changeColor(params) {\n\t\tconsole.log(params.target.value);\n\t\tstate.color = params.target.value;\n\t\tconsole.log(state.color);\n\t}\n\n\tfunction changeSize(params) {\n\t\tconsole.log(params.target.value);\n\t\tstate.size = params.target.value;\n\t}\n</script>\n\n<Header imageSrc=\"images/ShareCode.png\" />\n\n<div class=\"wrapper\">\n\t<CodeEditor />\n\t<InputOutput />\n\t<SideNav />\n\t<Message />\n</div>\n\n<div class=\"super-container\">\n\t<div class=\"container\">\n\t\t<div class=\"tools-section\">\n\t\t\t<!-- <div class=\"color-picker-container\">\n\t\t\t\tSelect Brush Color : &nbsp; \n\t\t\t\t<input type=\"color\" value={state.color} on:change={event => changeColor(event)}/>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class=\"brushsize-container\">\n\t\t\t\tSelect Brush Size : &nbsp; \n\t\t\t\t<select value={state.size} on:change={event => changeSize(event)}>\n\t\t\t\t\t<option> 5 </option>\n\t\t\t\t\t<option> 10 </option>\n\t\t\t\t\t<option> 15 </option>\n\t\t\t\t\t<option> 20 </option>\n\t\t\t\t\t<option> 25 </option>\n\t\t\t\t\t<option> 30 </option>\n\t\t\t\t</select>\n\t\t\t</div> -->\n\t\t\tWhiteBoard\n\t\t</div>\n\n\t\t<div class=\"board-container\">\n\t\t\t<Board color={state.color} size={state.size} />\n\t\t</div>\n\t</div>\n\t<div class=\"video-container\">\n\t\t<VideoGrid />\n\t</div>\n</div>\n\n<!-- <style>\n\t\n  </style> -->\n<style>\n\t.super-container{\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\t\n\t}\n\t.video-container{\n\t\twidth: 100%;\n\t\tborder: 3px solid black;\n\t}\n\t.wrapper {\n\t\tdisplay: flex;\n\t\theight: 65%;\n\t}\n\t.container {\n\t\tposition: relative;\n\t\twidth: 100%;\n\t\t/* height: 100%; */\n\t\tbackground: linear-gradient(45deg, #03a9f4, #4caf50);\n\t}\n\n\t.color-picker-container {\n\t\ttext-align: center;\n\t\tdisplay: inline;\n\t\tcolor: white;\n\t}\n\n\t.brushsize-container {\n\t\tdisplay: inline;\n\t\tcolor: white;\n\t\tmargin-left: 12px;\n\t}\n\n\t.tools-section {\n\t\ttext-align: center;\n\t}\n\n\t.board-container {\n\t\twidth: 100%;\n\t\theight: 85%;\n\t\tmargin: auto;\n\t\tmargin-top: 1%;\n\t\tbackground: white;\n\t}\n</style>\n","import App from \"./App.svelte\";\n\nconst app = new App({\n  target: document.body,\n});\n\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","get_store_value","store","value","callbacks","unsub","subscribe","unsubscribe","_","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","set_style","key","important","style","removeProperty","setProperty","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","length","update","pop","i","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","transition_in","block","local","delete","transition_out","o","outros","c","d","create_component","mount_component","customElement","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","subscriber","invalidate","size","EditorStore","messageStore","socket","WebSocket","console","log","JSON","parse","sendMessage","message","readyState","send","stringify","if_block","t0_value","username","t2_value","msg","strong","div0","div1","t0","t2","create_if_block","div","div3","input0","form","input1","div2","preventDefault","call","iterations","messages","currentMessage","$$invalidate","img","img_src_value","header","imageSrc","InitEditor","id","editor","CodeMirror","getElementById","lineNumbers","theme","mode","setSize","dbRef","firebase","initializeApp","apiKey","databaseURL","firepadRef","database","ref","roomId","URLSearchParams","window","location","search","get","child","history","replaceState","InitFireBase","Firepad","fromCodeMirror","defaultText","i0","i1","fileName","display","getValue","body","click","downloadCodeFromEditor","PACKET_TYPES","PACKET_TYPES_REVERSE","ERROR_PACKET","withNativeBlob","Blob","prototype","toString","withNativeArrayBuffer","ArrayBuffer","encodePacket","supportsBinary","encodeBlobAsBase64","isView","buffer","fileReader","FileReader","onload","content","result","split","readAsDataURL","chars","lookup","Uint8Array","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","Emitter","mixin","on","_callbacks","once","off","apply","arguments","removeListener","removeAllListeners","cb","emit","args","slice","emitReserved","listeners","hasListeners","globalThisShim","self","Function","pick","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","globalThis","clearTimeoutFn","TransportError","constructor","reason","description","super","Transport","query","onError","open","doOpen","close","doClose","onClose","packets","write","onOpen","onData","packet","onPacket","details","alphabet","prev","seed","encode","num","encoded","Math","floor","yeast","now","Date","str","encodeURIComponent","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","join","empty","hasXHR2","responseType","Request","uri","method","async","undefined","xd","xscheme","xs","xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","MozWebSocket","isReactNative","navigator","product","toLowerCase","transports","websocket","forceBase64","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","schema","secure","port","Number","timestampRequests","timestampParam","b64","encodedQuery","hostname","path","polling","isSSL","protocol","poll","pause","onPause","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","count","encodePayload","doWrite","sid","request","assign","req","xhrStatus","pollXhr","re","parts","src","replace","exec","source","host","authority","ipv6uri","pathNames","regx","names","substr","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","qs","qry","pairs","pair","decodeURIComponent","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","shift","setTransport","onDrain","probe","failed","onTransportOpen","upgrading","freezeTransport","error","onTransportClose","onupgrade","to","onHandshake","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","utf8Length","ceil","byteLength","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","Socket$1","withNativeFile","File","isBinary","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","Decoder","reviver","decodeString","BINARY_EVENT","BINARY_ACK","reconstructor","BinaryReconstructor","takeBinaryData","buf","nsp","next","payload","tryParse","isPayloadValid","static","CONNECT","DISCONNECT","CONNECT_ERROR","EVENT","ACK","destroy","finishedReconstruction","reconPack","binData","replacer","encodeAsString","encodeAsBinary","deconstruction","unshift","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","ack","_registerAckCallback","isTransportWritable","engine","volatile","notifyOutgoingListeners","timer","_packet","onconnect","onevent","onack","ondisconnect","emitEvent","_anyListeners","listener","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","Encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","loc","test","sameNamespace","forceNew","multiplex","color","drawOnCanvas","interval","setInterval","isDrawing","clearInterval","image","Image","querySelector","getContext","drawImage","canvas","sketch","sketch_style","getComputedStyle","width","parseInt","getPropertyValue","height","mouse","x","y","last_mouse","pageX","offsetLeft","pageY","offsetTop","lineWidth","lineJoin","lineCap","strokeStyle","onPaint","beginPath","moveTo","lineTo","closePath","stroke","base64ImageData","toDataURL","addVideoStream","video","stream","videoGrid","srcObject","play","myPeer","Peer","myVideo","muted","peers","mediaDevices","getUserMedia","audio","answer","userVideoStream","userId","remove","connectToNewUser","button","innerHTML","div5","div4","board_changes"],"mappings":"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"}